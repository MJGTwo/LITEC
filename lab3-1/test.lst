                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW32)
                                      4 ; This file was generated Fri Mar 13 10:22:11 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module test
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _Sys_Init
                                     14 	.globl _UART0_Init
                                     15 	.globl _SYSCLK_Init
                                     16 	.globl _SPIF
                                     17 	.globl _WCOL
                                     18 	.globl _MODF
                                     19 	.globl _RXOVRN
                                     20 	.globl _TXBSY
                                     21 	.globl _SLVSEL
                                     22 	.globl _MSTEN
                                     23 	.globl _SPIEN
                                     24 	.globl _AD0EN
                                     25 	.globl _ADCEN
                                     26 	.globl _AD0TM
                                     27 	.globl _ADCTM
                                     28 	.globl _AD0INT
                                     29 	.globl _ADCINT
                                     30 	.globl _AD0BUSY
                                     31 	.globl _ADBUSY
                                     32 	.globl _AD0CM1
                                     33 	.globl _ADSTM1
                                     34 	.globl _AD0CM0
                                     35 	.globl _ADSTM0
                                     36 	.globl _AD0WINT
                                     37 	.globl _ADWINT
                                     38 	.globl _AD0LJST
                                     39 	.globl _ADLJST
                                     40 	.globl _CF
                                     41 	.globl _CR
                                     42 	.globl _CCF4
                                     43 	.globl _CCF3
                                     44 	.globl _CCF2
                                     45 	.globl _CCF1
                                     46 	.globl _CCF0
                                     47 	.globl _CY
                                     48 	.globl _AC
                                     49 	.globl _F0
                                     50 	.globl _RS1
                                     51 	.globl _RS0
                                     52 	.globl _OV
                                     53 	.globl _F1
                                     54 	.globl _P
                                     55 	.globl _TF2
                                     56 	.globl _EXF2
                                     57 	.globl _RCLK
                                     58 	.globl _TCLK
                                     59 	.globl _EXEN2
                                     60 	.globl _TR2
                                     61 	.globl _CT2
                                     62 	.globl _CPRL2
                                     63 	.globl _BUSY
                                     64 	.globl _ENSMB
                                     65 	.globl _STA
                                     66 	.globl _STO
                                     67 	.globl _SI
                                     68 	.globl _AA
                                     69 	.globl _SMBFTE
                                     70 	.globl _SMBTOE
                                     71 	.globl _PT2
                                     72 	.globl _PS
                                     73 	.globl _PS0
                                     74 	.globl _PT1
                                     75 	.globl _PX1
                                     76 	.globl _PT0
                                     77 	.globl _PX0
                                     78 	.globl _P3_7
                                     79 	.globl _P3_6
                                     80 	.globl _P3_5
                                     81 	.globl _P3_4
                                     82 	.globl _P3_3
                                     83 	.globl _P3_2
                                     84 	.globl _P3_1
                                     85 	.globl _P3_0
                                     86 	.globl _EA
                                     87 	.globl _ET2
                                     88 	.globl _ES
                                     89 	.globl _ES0
                                     90 	.globl _ET1
                                     91 	.globl _EX1
                                     92 	.globl _ET0
                                     93 	.globl _EX0
                                     94 	.globl _P2_7
                                     95 	.globl _P2_6
                                     96 	.globl _P2_5
                                     97 	.globl _P2_4
                                     98 	.globl _P2_3
                                     99 	.globl _P2_2
                                    100 	.globl _P2_1
                                    101 	.globl _P2_0
                                    102 	.globl _S0MODE
                                    103 	.globl _SM00
                                    104 	.globl _SM0
                                    105 	.globl _SM10
                                    106 	.globl _SM1
                                    107 	.globl _MCE0
                                    108 	.globl _SM20
                                    109 	.globl _SM2
                                    110 	.globl _REN0
                                    111 	.globl _REN
                                    112 	.globl _TB80
                                    113 	.globl _TB8
                                    114 	.globl _RB80
                                    115 	.globl _RB8
                                    116 	.globl _TI0
                                    117 	.globl _TI
                                    118 	.globl _RI0
                                    119 	.globl _RI
                                    120 	.globl _P1_7
                                    121 	.globl _P1_6
                                    122 	.globl _P1_5
                                    123 	.globl _P1_4
                                    124 	.globl _P1_3
                                    125 	.globl _P1_2
                                    126 	.globl _P1_1
                                    127 	.globl _P1_0
                                    128 	.globl _TF1
                                    129 	.globl _TR1
                                    130 	.globl _TF0
                                    131 	.globl _TR0
                                    132 	.globl _IE1
                                    133 	.globl _IT1
                                    134 	.globl _IE0
                                    135 	.globl _IT0
                                    136 	.globl _P0_7
                                    137 	.globl _P0_6
                                    138 	.globl _P0_5
                                    139 	.globl _P0_4
                                    140 	.globl _P0_3
                                    141 	.globl _P0_2
                                    142 	.globl _P0_1
                                    143 	.globl _P0_0
                                    144 	.globl _PCA0CP4
                                    145 	.globl _PCA0CP3
                                    146 	.globl _PCA0CP2
                                    147 	.globl _PCA0CP1
                                    148 	.globl _PCA0CP0
                                    149 	.globl _PCA0
                                    150 	.globl _DAC1
                                    151 	.globl _DAC0
                                    152 	.globl _ADC0LT
                                    153 	.globl _ADC0GT
                                    154 	.globl _ADC0
                                    155 	.globl _RCAP4
                                    156 	.globl _TMR4
                                    157 	.globl _TMR3RL
                                    158 	.globl _TMR3
                                    159 	.globl _RCAP2
                                    160 	.globl _TMR2
                                    161 	.globl _TMR1
                                    162 	.globl _TMR0
                                    163 	.globl _WDTCN
                                    164 	.globl _PCA0CPH4
                                    165 	.globl _PCA0CPH3
                                    166 	.globl _PCA0CPH2
                                    167 	.globl _PCA0CPH1
                                    168 	.globl _PCA0CPH0
                                    169 	.globl _PCA0H
                                    170 	.globl _SPI0CN
                                    171 	.globl _EIP2
                                    172 	.globl _EIP1
                                    173 	.globl _TH4
                                    174 	.globl _TL4
                                    175 	.globl _SADDR1
                                    176 	.globl _SBUF1
                                    177 	.globl _SCON1
                                    178 	.globl _B
                                    179 	.globl _RSTSRC
                                    180 	.globl _PCA0CPL4
                                    181 	.globl _PCA0CPL3
                                    182 	.globl _PCA0CPL2
                                    183 	.globl _PCA0CPL1
                                    184 	.globl _PCA0CPL0
                                    185 	.globl _PCA0L
                                    186 	.globl _ADC0CN
                                    187 	.globl _EIE2
                                    188 	.globl _EIE1
                                    189 	.globl _RCAP4H
                                    190 	.globl _RCAP4L
                                    191 	.globl _XBR2
                                    192 	.globl _XBR1
                                    193 	.globl _XBR0
                                    194 	.globl _ACC
                                    195 	.globl _PCA0CPM4
                                    196 	.globl _PCA0CPM3
                                    197 	.globl _PCA0CPM2
                                    198 	.globl _PCA0CPM1
                                    199 	.globl _PCA0CPM0
                                    200 	.globl _PCA0MD
                                    201 	.globl _PCA0CN
                                    202 	.globl _DAC1CN
                                    203 	.globl _DAC1H
                                    204 	.globl _DAC1L
                                    205 	.globl _DAC0CN
                                    206 	.globl _DAC0H
                                    207 	.globl _DAC0L
                                    208 	.globl _REF0CN
                                    209 	.globl _PSW
                                    210 	.globl _SMB0CR
                                    211 	.globl _TH2
                                    212 	.globl _TL2
                                    213 	.globl _RCAP2H
                                    214 	.globl _RCAP2L
                                    215 	.globl _T4CON
                                    216 	.globl _T2CON
                                    217 	.globl _ADC0LTH
                                    218 	.globl _ADC0LTL
                                    219 	.globl _ADC0GTH
                                    220 	.globl _ADC0GTL
                                    221 	.globl _SMB0ADR
                                    222 	.globl _SMB0DAT
                                    223 	.globl _SMB0STA
                                    224 	.globl _SMB0CN
                                    225 	.globl _ADC0H
                                    226 	.globl _ADC0L
                                    227 	.globl _P1MDIN
                                    228 	.globl _ADC0CF
                                    229 	.globl _AMX0SL
                                    230 	.globl _AMX0CF
                                    231 	.globl _SADEN0
                                    232 	.globl _IP
                                    233 	.globl _FLACL
                                    234 	.globl _FLSCL
                                    235 	.globl _P74OUT
                                    236 	.globl _OSCICN
                                    237 	.globl _OSCXCN
                                    238 	.globl _P3
                                    239 	.globl __XPAGE
                                    240 	.globl _EMI0CN
                                    241 	.globl _SADEN1
                                    242 	.globl _P3IF
                                    243 	.globl _AMX1SL
                                    244 	.globl _ADC1CF
                                    245 	.globl _ADC1CN
                                    246 	.globl _SADDR0
                                    247 	.globl _IE
                                    248 	.globl _P3MDOUT
                                    249 	.globl _PRT3CF
                                    250 	.globl _P2MDOUT
                                    251 	.globl _PRT2CF
                                    252 	.globl _P1MDOUT
                                    253 	.globl _PRT1CF
                                    254 	.globl _P0MDOUT
                                    255 	.globl _PRT0CF
                                    256 	.globl _EMI0CF
                                    257 	.globl _EMI0TC
                                    258 	.globl _P2
                                    259 	.globl _CPT1CN
                                    260 	.globl _CPT0CN
                                    261 	.globl _SPI0CKR
                                    262 	.globl _ADC1
                                    263 	.globl _SPI0DAT
                                    264 	.globl _SPI0CFG
                                    265 	.globl _SBUF0
                                    266 	.globl _SBUF
                                    267 	.globl _SCON0
                                    268 	.globl _SCON
                                    269 	.globl _P7
                                    270 	.globl _TMR3H
                                    271 	.globl _TMR3L
                                    272 	.globl _TMR3RLH
                                    273 	.globl _TMR3RLL
                                    274 	.globl _TMR3CN
                                    275 	.globl _P1
                                    276 	.globl _PSCTL
                                    277 	.globl _CKCON
                                    278 	.globl _TH1
                                    279 	.globl _TH0
                                    280 	.globl _TL1
                                    281 	.globl _TL0
                                    282 	.globl _TMOD
                                    283 	.globl _TCON
                                    284 	.globl _PCON
                                    285 	.globl _P6
                                    286 	.globl _P5
                                    287 	.globl _P4
                                    288 	.globl _DPH
                                    289 	.globl _DPL
                                    290 	.globl _SP
                                    291 	.globl _P0
                                    292 	.globl _CEX0_PW
                                    293 	.globl _Port_Init
                                    294 	.globl _PCA_Init
                                    295 ;--------------------------------------------------------
                                    296 ; special function registers
                                    297 ;--------------------------------------------------------
                                    298 	.area RSEG    (ABS,DATA)
      000000                        299 	.org 0x0000
                           000080   300 G$P0$0$0 == 0x0080
                           000080   301 _P0	=	0x0080
                           000081   302 G$SP$0$0 == 0x0081
                           000081   303 _SP	=	0x0081
                           000082   304 G$DPL$0$0 == 0x0082
                           000082   305 _DPL	=	0x0082
                           000083   306 G$DPH$0$0 == 0x0083
                           000083   307 _DPH	=	0x0083
                           000084   308 G$P4$0$0 == 0x0084
                           000084   309 _P4	=	0x0084
                           000085   310 G$P5$0$0 == 0x0085
                           000085   311 _P5	=	0x0085
                           000086   312 G$P6$0$0 == 0x0086
                           000086   313 _P6	=	0x0086
                           000087   314 G$PCON$0$0 == 0x0087
                           000087   315 _PCON	=	0x0087
                           000088   316 G$TCON$0$0 == 0x0088
                           000088   317 _TCON	=	0x0088
                           000089   318 G$TMOD$0$0 == 0x0089
                           000089   319 _TMOD	=	0x0089
                           00008A   320 G$TL0$0$0 == 0x008a
                           00008A   321 _TL0	=	0x008a
                           00008B   322 G$TL1$0$0 == 0x008b
                           00008B   323 _TL1	=	0x008b
                           00008C   324 G$TH0$0$0 == 0x008c
                           00008C   325 _TH0	=	0x008c
                           00008D   326 G$TH1$0$0 == 0x008d
                           00008D   327 _TH1	=	0x008d
                           00008E   328 G$CKCON$0$0 == 0x008e
                           00008E   329 _CKCON	=	0x008e
                           00008F   330 G$PSCTL$0$0 == 0x008f
                           00008F   331 _PSCTL	=	0x008f
                           000090   332 G$P1$0$0 == 0x0090
                           000090   333 _P1	=	0x0090
                           000091   334 G$TMR3CN$0$0 == 0x0091
                           000091   335 _TMR3CN	=	0x0091
                           000092   336 G$TMR3RLL$0$0 == 0x0092
                           000092   337 _TMR3RLL	=	0x0092
                           000093   338 G$TMR3RLH$0$0 == 0x0093
                           000093   339 _TMR3RLH	=	0x0093
                           000094   340 G$TMR3L$0$0 == 0x0094
                           000094   341 _TMR3L	=	0x0094
                           000095   342 G$TMR3H$0$0 == 0x0095
                           000095   343 _TMR3H	=	0x0095
                           000096   344 G$P7$0$0 == 0x0096
                           000096   345 _P7	=	0x0096
                           000098   346 G$SCON$0$0 == 0x0098
                           000098   347 _SCON	=	0x0098
                           000098   348 G$SCON0$0$0 == 0x0098
                           000098   349 _SCON0	=	0x0098
                           000099   350 G$SBUF$0$0 == 0x0099
                           000099   351 _SBUF	=	0x0099
                           000099   352 G$SBUF0$0$0 == 0x0099
                           000099   353 _SBUF0	=	0x0099
                           00009A   354 G$SPI0CFG$0$0 == 0x009a
                           00009A   355 _SPI0CFG	=	0x009a
                           00009B   356 G$SPI0DAT$0$0 == 0x009b
                           00009B   357 _SPI0DAT	=	0x009b
                           00009C   358 G$ADC1$0$0 == 0x009c
                           00009C   359 _ADC1	=	0x009c
                           00009D   360 G$SPI0CKR$0$0 == 0x009d
                           00009D   361 _SPI0CKR	=	0x009d
                           00009E   362 G$CPT0CN$0$0 == 0x009e
                           00009E   363 _CPT0CN	=	0x009e
                           00009F   364 G$CPT1CN$0$0 == 0x009f
                           00009F   365 _CPT1CN	=	0x009f
                           0000A0   366 G$P2$0$0 == 0x00a0
                           0000A0   367 _P2	=	0x00a0
                           0000A1   368 G$EMI0TC$0$0 == 0x00a1
                           0000A1   369 _EMI0TC	=	0x00a1
                           0000A3   370 G$EMI0CF$0$0 == 0x00a3
                           0000A3   371 _EMI0CF	=	0x00a3
                           0000A4   372 G$PRT0CF$0$0 == 0x00a4
                           0000A4   373 _PRT0CF	=	0x00a4
                           0000A4   374 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   375 _P0MDOUT	=	0x00a4
                           0000A5   376 G$PRT1CF$0$0 == 0x00a5
                           0000A5   377 _PRT1CF	=	0x00a5
                           0000A5   378 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   379 _P1MDOUT	=	0x00a5
                           0000A6   380 G$PRT2CF$0$0 == 0x00a6
                           0000A6   381 _PRT2CF	=	0x00a6
                           0000A6   382 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   383 _P2MDOUT	=	0x00a6
                           0000A7   384 G$PRT3CF$0$0 == 0x00a7
                           0000A7   385 _PRT3CF	=	0x00a7
                           0000A7   386 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   387 _P3MDOUT	=	0x00a7
                           0000A8   388 G$IE$0$0 == 0x00a8
                           0000A8   389 _IE	=	0x00a8
                           0000A9   390 G$SADDR0$0$0 == 0x00a9
                           0000A9   391 _SADDR0	=	0x00a9
                           0000AA   392 G$ADC1CN$0$0 == 0x00aa
                           0000AA   393 _ADC1CN	=	0x00aa
                           0000AB   394 G$ADC1CF$0$0 == 0x00ab
                           0000AB   395 _ADC1CF	=	0x00ab
                           0000AC   396 G$AMX1SL$0$0 == 0x00ac
                           0000AC   397 _AMX1SL	=	0x00ac
                           0000AD   398 G$P3IF$0$0 == 0x00ad
                           0000AD   399 _P3IF	=	0x00ad
                           0000AE   400 G$SADEN1$0$0 == 0x00ae
                           0000AE   401 _SADEN1	=	0x00ae
                           0000AF   402 G$EMI0CN$0$0 == 0x00af
                           0000AF   403 _EMI0CN	=	0x00af
                           0000AF   404 G$_XPAGE$0$0 == 0x00af
                           0000AF   405 __XPAGE	=	0x00af
                           0000B0   406 G$P3$0$0 == 0x00b0
                           0000B0   407 _P3	=	0x00b0
                           0000B1   408 G$OSCXCN$0$0 == 0x00b1
                           0000B1   409 _OSCXCN	=	0x00b1
                           0000B2   410 G$OSCICN$0$0 == 0x00b2
                           0000B2   411 _OSCICN	=	0x00b2
                           0000B5   412 G$P74OUT$0$0 == 0x00b5
                           0000B5   413 _P74OUT	=	0x00b5
                           0000B6   414 G$FLSCL$0$0 == 0x00b6
                           0000B6   415 _FLSCL	=	0x00b6
                           0000B7   416 G$FLACL$0$0 == 0x00b7
                           0000B7   417 _FLACL	=	0x00b7
                           0000B8   418 G$IP$0$0 == 0x00b8
                           0000B8   419 _IP	=	0x00b8
                           0000B9   420 G$SADEN0$0$0 == 0x00b9
                           0000B9   421 _SADEN0	=	0x00b9
                           0000BA   422 G$AMX0CF$0$0 == 0x00ba
                           0000BA   423 _AMX0CF	=	0x00ba
                           0000BB   424 G$AMX0SL$0$0 == 0x00bb
                           0000BB   425 _AMX0SL	=	0x00bb
                           0000BC   426 G$ADC0CF$0$0 == 0x00bc
                           0000BC   427 _ADC0CF	=	0x00bc
                           0000BD   428 G$P1MDIN$0$0 == 0x00bd
                           0000BD   429 _P1MDIN	=	0x00bd
                           0000BE   430 G$ADC0L$0$0 == 0x00be
                           0000BE   431 _ADC0L	=	0x00be
                           0000BF   432 G$ADC0H$0$0 == 0x00bf
                           0000BF   433 _ADC0H	=	0x00bf
                           0000C0   434 G$SMB0CN$0$0 == 0x00c0
                           0000C0   435 _SMB0CN	=	0x00c0
                           0000C1   436 G$SMB0STA$0$0 == 0x00c1
                           0000C1   437 _SMB0STA	=	0x00c1
                           0000C2   438 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   439 _SMB0DAT	=	0x00c2
                           0000C3   440 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   441 _SMB0ADR	=	0x00c3
                           0000C4   442 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   443 _ADC0GTL	=	0x00c4
                           0000C5   444 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   445 _ADC0GTH	=	0x00c5
                           0000C6   446 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   447 _ADC0LTL	=	0x00c6
                           0000C7   448 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   449 _ADC0LTH	=	0x00c7
                           0000C8   450 G$T2CON$0$0 == 0x00c8
                           0000C8   451 _T2CON	=	0x00c8
                           0000C9   452 G$T4CON$0$0 == 0x00c9
                           0000C9   453 _T4CON	=	0x00c9
                           0000CA   454 G$RCAP2L$0$0 == 0x00ca
                           0000CA   455 _RCAP2L	=	0x00ca
                           0000CB   456 G$RCAP2H$0$0 == 0x00cb
                           0000CB   457 _RCAP2H	=	0x00cb
                           0000CC   458 G$TL2$0$0 == 0x00cc
                           0000CC   459 _TL2	=	0x00cc
                           0000CD   460 G$TH2$0$0 == 0x00cd
                           0000CD   461 _TH2	=	0x00cd
                           0000CF   462 G$SMB0CR$0$0 == 0x00cf
                           0000CF   463 _SMB0CR	=	0x00cf
                           0000D0   464 G$PSW$0$0 == 0x00d0
                           0000D0   465 _PSW	=	0x00d0
                           0000D1   466 G$REF0CN$0$0 == 0x00d1
                           0000D1   467 _REF0CN	=	0x00d1
                           0000D2   468 G$DAC0L$0$0 == 0x00d2
                           0000D2   469 _DAC0L	=	0x00d2
                           0000D3   470 G$DAC0H$0$0 == 0x00d3
                           0000D3   471 _DAC0H	=	0x00d3
                           0000D4   472 G$DAC0CN$0$0 == 0x00d4
                           0000D4   473 _DAC0CN	=	0x00d4
                           0000D5   474 G$DAC1L$0$0 == 0x00d5
                           0000D5   475 _DAC1L	=	0x00d5
                           0000D6   476 G$DAC1H$0$0 == 0x00d6
                           0000D6   477 _DAC1H	=	0x00d6
                           0000D7   478 G$DAC1CN$0$0 == 0x00d7
                           0000D7   479 _DAC1CN	=	0x00d7
                           0000D8   480 G$PCA0CN$0$0 == 0x00d8
                           0000D8   481 _PCA0CN	=	0x00d8
                           0000D9   482 G$PCA0MD$0$0 == 0x00d9
                           0000D9   483 _PCA0MD	=	0x00d9
                           0000DA   484 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   485 _PCA0CPM0	=	0x00da
                           0000DB   486 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   487 _PCA0CPM1	=	0x00db
                           0000DC   488 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   489 _PCA0CPM2	=	0x00dc
                           0000DD   490 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   491 _PCA0CPM3	=	0x00dd
                           0000DE   492 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   493 _PCA0CPM4	=	0x00de
                           0000E0   494 G$ACC$0$0 == 0x00e0
                           0000E0   495 _ACC	=	0x00e0
                           0000E1   496 G$XBR0$0$0 == 0x00e1
                           0000E1   497 _XBR0	=	0x00e1
                           0000E2   498 G$XBR1$0$0 == 0x00e2
                           0000E2   499 _XBR1	=	0x00e2
                           0000E3   500 G$XBR2$0$0 == 0x00e3
                           0000E3   501 _XBR2	=	0x00e3
                           0000E4   502 G$RCAP4L$0$0 == 0x00e4
                           0000E4   503 _RCAP4L	=	0x00e4
                           0000E5   504 G$RCAP4H$0$0 == 0x00e5
                           0000E5   505 _RCAP4H	=	0x00e5
                           0000E6   506 G$EIE1$0$0 == 0x00e6
                           0000E6   507 _EIE1	=	0x00e6
                           0000E7   508 G$EIE2$0$0 == 0x00e7
                           0000E7   509 _EIE2	=	0x00e7
                           0000E8   510 G$ADC0CN$0$0 == 0x00e8
                           0000E8   511 _ADC0CN	=	0x00e8
                           0000E9   512 G$PCA0L$0$0 == 0x00e9
                           0000E9   513 _PCA0L	=	0x00e9
                           0000EA   514 G$PCA0CPL0$0$0 == 0x00ea
                           0000EA   515 _PCA0CPL0	=	0x00ea
                           0000EB   516 G$PCA0CPL1$0$0 == 0x00eb
                           0000EB   517 _PCA0CPL1	=	0x00eb
                           0000EC   518 G$PCA0CPL2$0$0 == 0x00ec
                           0000EC   519 _PCA0CPL2	=	0x00ec
                           0000ED   520 G$PCA0CPL3$0$0 == 0x00ed
                           0000ED   521 _PCA0CPL3	=	0x00ed
                           0000EE   522 G$PCA0CPL4$0$0 == 0x00ee
                           0000EE   523 _PCA0CPL4	=	0x00ee
                           0000EF   524 G$RSTSRC$0$0 == 0x00ef
                           0000EF   525 _RSTSRC	=	0x00ef
                           0000F0   526 G$B$0$0 == 0x00f0
                           0000F0   527 _B	=	0x00f0
                           0000F1   528 G$SCON1$0$0 == 0x00f1
                           0000F1   529 _SCON1	=	0x00f1
                           0000F2   530 G$SBUF1$0$0 == 0x00f2
                           0000F2   531 _SBUF1	=	0x00f2
                           0000F3   532 G$SADDR1$0$0 == 0x00f3
                           0000F3   533 _SADDR1	=	0x00f3
                           0000F4   534 G$TL4$0$0 == 0x00f4
                           0000F4   535 _TL4	=	0x00f4
                           0000F5   536 G$TH4$0$0 == 0x00f5
                           0000F5   537 _TH4	=	0x00f5
                           0000F6   538 G$EIP1$0$0 == 0x00f6
                           0000F6   539 _EIP1	=	0x00f6
                           0000F7   540 G$EIP2$0$0 == 0x00f7
                           0000F7   541 _EIP2	=	0x00f7
                           0000F8   542 G$SPI0CN$0$0 == 0x00f8
                           0000F8   543 _SPI0CN	=	0x00f8
                           0000F9   544 G$PCA0H$0$0 == 0x00f9
                           0000F9   545 _PCA0H	=	0x00f9
                           0000FA   546 G$PCA0CPH0$0$0 == 0x00fa
                           0000FA   547 _PCA0CPH0	=	0x00fa
                           0000FB   548 G$PCA0CPH1$0$0 == 0x00fb
                           0000FB   549 _PCA0CPH1	=	0x00fb
                           0000FC   550 G$PCA0CPH2$0$0 == 0x00fc
                           0000FC   551 _PCA0CPH2	=	0x00fc
                           0000FD   552 G$PCA0CPH3$0$0 == 0x00fd
                           0000FD   553 _PCA0CPH3	=	0x00fd
                           0000FE   554 G$PCA0CPH4$0$0 == 0x00fe
                           0000FE   555 _PCA0CPH4	=	0x00fe
                           0000FF   556 G$WDTCN$0$0 == 0x00ff
                           0000FF   557 _WDTCN	=	0x00ff
                           008C8A   558 G$TMR0$0$0 == 0x8c8a
                           008C8A   559 _TMR0	=	0x8c8a
                           008D8B   560 G$TMR1$0$0 == 0x8d8b
                           008D8B   561 _TMR1	=	0x8d8b
                           00CDCC   562 G$TMR2$0$0 == 0xcdcc
                           00CDCC   563 _TMR2	=	0xcdcc
                           00CBCA   564 G$RCAP2$0$0 == 0xcbca
                           00CBCA   565 _RCAP2	=	0xcbca
                           009594   566 G$TMR3$0$0 == 0x9594
                           009594   567 _TMR3	=	0x9594
                           009392   568 G$TMR3RL$0$0 == 0x9392
                           009392   569 _TMR3RL	=	0x9392
                           00F5F4   570 G$TMR4$0$0 == 0xf5f4
                           00F5F4   571 _TMR4	=	0xf5f4
                           00E5E4   572 G$RCAP4$0$0 == 0xe5e4
                           00E5E4   573 _RCAP4	=	0xe5e4
                           00BFBE   574 G$ADC0$0$0 == 0xbfbe
                           00BFBE   575 _ADC0	=	0xbfbe
                           00C5C4   576 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   577 _ADC0GT	=	0xc5c4
                           00C7C6   578 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   579 _ADC0LT	=	0xc7c6
                           00D3D2   580 G$DAC0$0$0 == 0xd3d2
                           00D3D2   581 _DAC0	=	0xd3d2
                           00D6D5   582 G$DAC1$0$0 == 0xd6d5
                           00D6D5   583 _DAC1	=	0xd6d5
                           00F9E9   584 G$PCA0$0$0 == 0xf9e9
                           00F9E9   585 _PCA0	=	0xf9e9
                           00FAEA   586 G$PCA0CP0$0$0 == 0xfaea
                           00FAEA   587 _PCA0CP0	=	0xfaea
                           00FBEB   588 G$PCA0CP1$0$0 == 0xfbeb
                           00FBEB   589 _PCA0CP1	=	0xfbeb
                           00FCEC   590 G$PCA0CP2$0$0 == 0xfcec
                           00FCEC   591 _PCA0CP2	=	0xfcec
                           00FDED   592 G$PCA0CP3$0$0 == 0xfded
                           00FDED   593 _PCA0CP3	=	0xfded
                           00FEEE   594 G$PCA0CP4$0$0 == 0xfeee
                           00FEEE   595 _PCA0CP4	=	0xfeee
                                    596 ;--------------------------------------------------------
                                    597 ; special function bits
                                    598 ;--------------------------------------------------------
                                    599 	.area RSEG    (ABS,DATA)
      000000                        600 	.org 0x0000
                           000080   601 G$P0_0$0$0 == 0x0080
                           000080   602 _P0_0	=	0x0080
                           000081   603 G$P0_1$0$0 == 0x0081
                           000081   604 _P0_1	=	0x0081
                           000082   605 G$P0_2$0$0 == 0x0082
                           000082   606 _P0_2	=	0x0082
                           000083   607 G$P0_3$0$0 == 0x0083
                           000083   608 _P0_3	=	0x0083
                           000084   609 G$P0_4$0$0 == 0x0084
                           000084   610 _P0_4	=	0x0084
                           000085   611 G$P0_5$0$0 == 0x0085
                           000085   612 _P0_5	=	0x0085
                           000086   613 G$P0_6$0$0 == 0x0086
                           000086   614 _P0_6	=	0x0086
                           000087   615 G$P0_7$0$0 == 0x0087
                           000087   616 _P0_7	=	0x0087
                           000088   617 G$IT0$0$0 == 0x0088
                           000088   618 _IT0	=	0x0088
                           000089   619 G$IE0$0$0 == 0x0089
                           000089   620 _IE0	=	0x0089
                           00008A   621 G$IT1$0$0 == 0x008a
                           00008A   622 _IT1	=	0x008a
                           00008B   623 G$IE1$0$0 == 0x008b
                           00008B   624 _IE1	=	0x008b
                           00008C   625 G$TR0$0$0 == 0x008c
                           00008C   626 _TR0	=	0x008c
                           00008D   627 G$TF0$0$0 == 0x008d
                           00008D   628 _TF0	=	0x008d
                           00008E   629 G$TR1$0$0 == 0x008e
                           00008E   630 _TR1	=	0x008e
                           00008F   631 G$TF1$0$0 == 0x008f
                           00008F   632 _TF1	=	0x008f
                           000090   633 G$P1_0$0$0 == 0x0090
                           000090   634 _P1_0	=	0x0090
                           000091   635 G$P1_1$0$0 == 0x0091
                           000091   636 _P1_1	=	0x0091
                           000092   637 G$P1_2$0$0 == 0x0092
                           000092   638 _P1_2	=	0x0092
                           000093   639 G$P1_3$0$0 == 0x0093
                           000093   640 _P1_3	=	0x0093
                           000094   641 G$P1_4$0$0 == 0x0094
                           000094   642 _P1_4	=	0x0094
                           000095   643 G$P1_5$0$0 == 0x0095
                           000095   644 _P1_5	=	0x0095
                           000096   645 G$P1_6$0$0 == 0x0096
                           000096   646 _P1_6	=	0x0096
                           000097   647 G$P1_7$0$0 == 0x0097
                           000097   648 _P1_7	=	0x0097
                           000098   649 G$RI$0$0 == 0x0098
                           000098   650 _RI	=	0x0098
                           000098   651 G$RI0$0$0 == 0x0098
                           000098   652 _RI0	=	0x0098
                           000099   653 G$TI$0$0 == 0x0099
                           000099   654 _TI	=	0x0099
                           000099   655 G$TI0$0$0 == 0x0099
                           000099   656 _TI0	=	0x0099
                           00009A   657 G$RB8$0$0 == 0x009a
                           00009A   658 _RB8	=	0x009a
                           00009A   659 G$RB80$0$0 == 0x009a
                           00009A   660 _RB80	=	0x009a
                           00009B   661 G$TB8$0$0 == 0x009b
                           00009B   662 _TB8	=	0x009b
                           00009B   663 G$TB80$0$0 == 0x009b
                           00009B   664 _TB80	=	0x009b
                           00009C   665 G$REN$0$0 == 0x009c
                           00009C   666 _REN	=	0x009c
                           00009C   667 G$REN0$0$0 == 0x009c
                           00009C   668 _REN0	=	0x009c
                           00009D   669 G$SM2$0$0 == 0x009d
                           00009D   670 _SM2	=	0x009d
                           00009D   671 G$SM20$0$0 == 0x009d
                           00009D   672 _SM20	=	0x009d
                           00009D   673 G$MCE0$0$0 == 0x009d
                           00009D   674 _MCE0	=	0x009d
                           00009E   675 G$SM1$0$0 == 0x009e
                           00009E   676 _SM1	=	0x009e
                           00009E   677 G$SM10$0$0 == 0x009e
                           00009E   678 _SM10	=	0x009e
                           00009F   679 G$SM0$0$0 == 0x009f
                           00009F   680 _SM0	=	0x009f
                           00009F   681 G$SM00$0$0 == 0x009f
                           00009F   682 _SM00	=	0x009f
                           00009F   683 G$S0MODE$0$0 == 0x009f
                           00009F   684 _S0MODE	=	0x009f
                           0000A0   685 G$P2_0$0$0 == 0x00a0
                           0000A0   686 _P2_0	=	0x00a0
                           0000A1   687 G$P2_1$0$0 == 0x00a1
                           0000A1   688 _P2_1	=	0x00a1
                           0000A2   689 G$P2_2$0$0 == 0x00a2
                           0000A2   690 _P2_2	=	0x00a2
                           0000A3   691 G$P2_3$0$0 == 0x00a3
                           0000A3   692 _P2_3	=	0x00a3
                           0000A4   693 G$P2_4$0$0 == 0x00a4
                           0000A4   694 _P2_4	=	0x00a4
                           0000A5   695 G$P2_5$0$0 == 0x00a5
                           0000A5   696 _P2_5	=	0x00a5
                           0000A6   697 G$P2_6$0$0 == 0x00a6
                           0000A6   698 _P2_6	=	0x00a6
                           0000A7   699 G$P2_7$0$0 == 0x00a7
                           0000A7   700 _P2_7	=	0x00a7
                           0000A8   701 G$EX0$0$0 == 0x00a8
                           0000A8   702 _EX0	=	0x00a8
                           0000A9   703 G$ET0$0$0 == 0x00a9
                           0000A9   704 _ET0	=	0x00a9
                           0000AA   705 G$EX1$0$0 == 0x00aa
                           0000AA   706 _EX1	=	0x00aa
                           0000AB   707 G$ET1$0$0 == 0x00ab
                           0000AB   708 _ET1	=	0x00ab
                           0000AC   709 G$ES0$0$0 == 0x00ac
                           0000AC   710 _ES0	=	0x00ac
                           0000AC   711 G$ES$0$0 == 0x00ac
                           0000AC   712 _ES	=	0x00ac
                           0000AD   713 G$ET2$0$0 == 0x00ad
                           0000AD   714 _ET2	=	0x00ad
                           0000AF   715 G$EA$0$0 == 0x00af
                           0000AF   716 _EA	=	0x00af
                           0000B0   717 G$P3_0$0$0 == 0x00b0
                           0000B0   718 _P3_0	=	0x00b0
                           0000B1   719 G$P3_1$0$0 == 0x00b1
                           0000B1   720 _P3_1	=	0x00b1
                           0000B2   721 G$P3_2$0$0 == 0x00b2
                           0000B2   722 _P3_2	=	0x00b2
                           0000B3   723 G$P3_3$0$0 == 0x00b3
                           0000B3   724 _P3_3	=	0x00b3
                           0000B4   725 G$P3_4$0$0 == 0x00b4
                           0000B4   726 _P3_4	=	0x00b4
                           0000B5   727 G$P3_5$0$0 == 0x00b5
                           0000B5   728 _P3_5	=	0x00b5
                           0000B6   729 G$P3_6$0$0 == 0x00b6
                           0000B6   730 _P3_6	=	0x00b6
                           0000B7   731 G$P3_7$0$0 == 0x00b7
                           0000B7   732 _P3_7	=	0x00b7
                           0000B8   733 G$PX0$0$0 == 0x00b8
                           0000B8   734 _PX0	=	0x00b8
                           0000B9   735 G$PT0$0$0 == 0x00b9
                           0000B9   736 _PT0	=	0x00b9
                           0000BA   737 G$PX1$0$0 == 0x00ba
                           0000BA   738 _PX1	=	0x00ba
                           0000BB   739 G$PT1$0$0 == 0x00bb
                           0000BB   740 _PT1	=	0x00bb
                           0000BC   741 G$PS0$0$0 == 0x00bc
                           0000BC   742 _PS0	=	0x00bc
                           0000BC   743 G$PS$0$0 == 0x00bc
                           0000BC   744 _PS	=	0x00bc
                           0000BD   745 G$PT2$0$0 == 0x00bd
                           0000BD   746 _PT2	=	0x00bd
                           0000C0   747 G$SMBTOE$0$0 == 0x00c0
                           0000C0   748 _SMBTOE	=	0x00c0
                           0000C1   749 G$SMBFTE$0$0 == 0x00c1
                           0000C1   750 _SMBFTE	=	0x00c1
                           0000C2   751 G$AA$0$0 == 0x00c2
                           0000C2   752 _AA	=	0x00c2
                           0000C3   753 G$SI$0$0 == 0x00c3
                           0000C3   754 _SI	=	0x00c3
                           0000C4   755 G$STO$0$0 == 0x00c4
                           0000C4   756 _STO	=	0x00c4
                           0000C5   757 G$STA$0$0 == 0x00c5
                           0000C5   758 _STA	=	0x00c5
                           0000C6   759 G$ENSMB$0$0 == 0x00c6
                           0000C6   760 _ENSMB	=	0x00c6
                           0000C7   761 G$BUSY$0$0 == 0x00c7
                           0000C7   762 _BUSY	=	0x00c7
                           0000C8   763 G$CPRL2$0$0 == 0x00c8
                           0000C8   764 _CPRL2	=	0x00c8
                           0000C9   765 G$CT2$0$0 == 0x00c9
                           0000C9   766 _CT2	=	0x00c9
                           0000CA   767 G$TR2$0$0 == 0x00ca
                           0000CA   768 _TR2	=	0x00ca
                           0000CB   769 G$EXEN2$0$0 == 0x00cb
                           0000CB   770 _EXEN2	=	0x00cb
                           0000CC   771 G$TCLK$0$0 == 0x00cc
                           0000CC   772 _TCLK	=	0x00cc
                           0000CD   773 G$RCLK$0$0 == 0x00cd
                           0000CD   774 _RCLK	=	0x00cd
                           0000CE   775 G$EXF2$0$0 == 0x00ce
                           0000CE   776 _EXF2	=	0x00ce
                           0000CF   777 G$TF2$0$0 == 0x00cf
                           0000CF   778 _TF2	=	0x00cf
                           0000D0   779 G$P$0$0 == 0x00d0
                           0000D0   780 _P	=	0x00d0
                           0000D1   781 G$F1$0$0 == 0x00d1
                           0000D1   782 _F1	=	0x00d1
                           0000D2   783 G$OV$0$0 == 0x00d2
                           0000D2   784 _OV	=	0x00d2
                           0000D3   785 G$RS0$0$0 == 0x00d3
                           0000D3   786 _RS0	=	0x00d3
                           0000D4   787 G$RS1$0$0 == 0x00d4
                           0000D4   788 _RS1	=	0x00d4
                           0000D5   789 G$F0$0$0 == 0x00d5
                           0000D5   790 _F0	=	0x00d5
                           0000D6   791 G$AC$0$0 == 0x00d6
                           0000D6   792 _AC	=	0x00d6
                           0000D7   793 G$CY$0$0 == 0x00d7
                           0000D7   794 _CY	=	0x00d7
                           0000D8   795 G$CCF0$0$0 == 0x00d8
                           0000D8   796 _CCF0	=	0x00d8
                           0000D9   797 G$CCF1$0$0 == 0x00d9
                           0000D9   798 _CCF1	=	0x00d9
                           0000DA   799 G$CCF2$0$0 == 0x00da
                           0000DA   800 _CCF2	=	0x00da
                           0000DB   801 G$CCF3$0$0 == 0x00db
                           0000DB   802 _CCF3	=	0x00db
                           0000DC   803 G$CCF4$0$0 == 0x00dc
                           0000DC   804 _CCF4	=	0x00dc
                           0000DE   805 G$CR$0$0 == 0x00de
                           0000DE   806 _CR	=	0x00de
                           0000DF   807 G$CF$0$0 == 0x00df
                           0000DF   808 _CF	=	0x00df
                           0000E8   809 G$ADLJST$0$0 == 0x00e8
                           0000E8   810 _ADLJST	=	0x00e8
                           0000E8   811 G$AD0LJST$0$0 == 0x00e8
                           0000E8   812 _AD0LJST	=	0x00e8
                           0000E9   813 G$ADWINT$0$0 == 0x00e9
                           0000E9   814 _ADWINT	=	0x00e9
                           0000E9   815 G$AD0WINT$0$0 == 0x00e9
                           0000E9   816 _AD0WINT	=	0x00e9
                           0000EA   817 G$ADSTM0$0$0 == 0x00ea
                           0000EA   818 _ADSTM0	=	0x00ea
                           0000EA   819 G$AD0CM0$0$0 == 0x00ea
                           0000EA   820 _AD0CM0	=	0x00ea
                           0000EB   821 G$ADSTM1$0$0 == 0x00eb
                           0000EB   822 _ADSTM1	=	0x00eb
                           0000EB   823 G$AD0CM1$0$0 == 0x00eb
                           0000EB   824 _AD0CM1	=	0x00eb
                           0000EC   825 G$ADBUSY$0$0 == 0x00ec
                           0000EC   826 _ADBUSY	=	0x00ec
                           0000EC   827 G$AD0BUSY$0$0 == 0x00ec
                           0000EC   828 _AD0BUSY	=	0x00ec
                           0000ED   829 G$ADCINT$0$0 == 0x00ed
                           0000ED   830 _ADCINT	=	0x00ed
                           0000ED   831 G$AD0INT$0$0 == 0x00ed
                           0000ED   832 _AD0INT	=	0x00ed
                           0000EE   833 G$ADCTM$0$0 == 0x00ee
                           0000EE   834 _ADCTM	=	0x00ee
                           0000EE   835 G$AD0TM$0$0 == 0x00ee
                           0000EE   836 _AD0TM	=	0x00ee
                           0000EF   837 G$ADCEN$0$0 == 0x00ef
                           0000EF   838 _ADCEN	=	0x00ef
                           0000EF   839 G$AD0EN$0$0 == 0x00ef
                           0000EF   840 _AD0EN	=	0x00ef
                           0000F8   841 G$SPIEN$0$0 == 0x00f8
                           0000F8   842 _SPIEN	=	0x00f8
                           0000F9   843 G$MSTEN$0$0 == 0x00f9
                           0000F9   844 _MSTEN	=	0x00f9
                           0000FA   845 G$SLVSEL$0$0 == 0x00fa
                           0000FA   846 _SLVSEL	=	0x00fa
                           0000FB   847 G$TXBSY$0$0 == 0x00fb
                           0000FB   848 _TXBSY	=	0x00fb
                           0000FC   849 G$RXOVRN$0$0 == 0x00fc
                           0000FC   850 _RXOVRN	=	0x00fc
                           0000FD   851 G$MODF$0$0 == 0x00fd
                           0000FD   852 _MODF	=	0x00fd
                           0000FE   853 G$WCOL$0$0 == 0x00fe
                           0000FE   854 _WCOL	=	0x00fe
                           0000FF   855 G$SPIF$0$0 == 0x00ff
                           0000FF   856 _SPIF	=	0x00ff
                                    857 ;--------------------------------------------------------
                                    858 ; overlayable register banks
                                    859 ;--------------------------------------------------------
                                    860 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        861 	.ds 8
                                    862 ;--------------------------------------------------------
                                    863 ; internal ram data
                                    864 ;--------------------------------------------------------
                                    865 	.area DSEG    (DATA)
                           000000   866 G$CEX0_PW$0$0==.
      000000                        867 _CEX0_PW::
      000000                        868 	.ds 2
                                    869 ;--------------------------------------------------------
                                    870 ; overlayable items in internal ram 
                                    871 ;--------------------------------------------------------
                                    872 	.area	OSEG    (OVR,DATA)
                                    873 	.area	OSEG    (OVR,DATA)
                                    874 ;--------------------------------------------------------
                                    875 ; Stack segment in internal ram 
                                    876 ;--------------------------------------------------------
                                    877 	.area	SSEG
      000000                        878 __start__stack:
      000000                        879 	.ds	1
                                    880 
                                    881 ;--------------------------------------------------------
                                    882 ; indirectly addressable internal ram data
                                    883 ;--------------------------------------------------------
                                    884 	.area ISEG    (DATA)
                                    885 ;--------------------------------------------------------
                                    886 ; absolute internal ram data
                                    887 ;--------------------------------------------------------
                                    888 	.area IABS    (ABS,DATA)
                                    889 	.area IABS    (ABS,DATA)
                                    890 ;--------------------------------------------------------
                                    891 ; bit data
                                    892 ;--------------------------------------------------------
                                    893 	.area BSEG    (BIT)
                                    894 ;--------------------------------------------------------
                                    895 ; paged external ram data
                                    896 ;--------------------------------------------------------
                                    897 	.area PSEG    (PAG,XDATA)
                                    898 ;--------------------------------------------------------
                                    899 ; external ram data
                                    900 ;--------------------------------------------------------
                                    901 	.area XSEG    (XDATA)
                                    902 ;--------------------------------------------------------
                                    903 ; absolute external ram data
                                    904 ;--------------------------------------------------------
                                    905 	.area XABS    (ABS,XDATA)
                                    906 ;--------------------------------------------------------
                                    907 ; external initialized ram data
                                    908 ;--------------------------------------------------------
                                    909 	.area XISEG   (XDATA)
                                    910 	.area HOME    (CODE)
                                    911 	.area GSINIT0 (CODE)
                                    912 	.area GSINIT1 (CODE)
                                    913 	.area GSINIT2 (CODE)
                                    914 	.area GSINIT3 (CODE)
                                    915 	.area GSINIT4 (CODE)
                                    916 	.area GSINIT5 (CODE)
                                    917 	.area GSINIT  (CODE)
                                    918 	.area GSFINAL (CODE)
                                    919 	.area CSEG    (CODE)
                                    920 ;--------------------------------------------------------
                                    921 ; interrupt vector 
                                    922 ;--------------------------------------------------------
                                    923 	.area HOME    (CODE)
      000000                        924 __interrupt_vect:
      000000 02r00r00         [24]  925 	ljmp	__sdcc_gsinit_startup
                                    926 ;--------------------------------------------------------
                                    927 ; global & static initialisations
                                    928 ;--------------------------------------------------------
                                    929 	.area HOME    (CODE)
                                    930 	.area GSINIT  (CODE)
                                    931 	.area GSFINAL (CODE)
                                    932 	.area GSINIT  (CODE)
                                    933 	.globl __sdcc_gsinit_startup
                                    934 	.globl __sdcc_program_startup
                                    935 	.globl __start__stack
                                    936 	.globl __mcs51_genXINIT
                                    937 	.globl __mcs51_genXRAMCLEAR
                                    938 	.globl __mcs51_genRAMCLEAR
                           000000   939 	C$test.c$5$1$48 ==.
                                    940 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:5: int CEX0_PW = 20000;
      000000 75*00 20         [24]  941 	mov	_CEX0_PW,#0x20
      000003 75*01 4E         [24]  942 	mov	(_CEX0_PW + 1),#0x4E
                                    943 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  944 	ljmp	__sdcc_program_startup
                                    945 ;--------------------------------------------------------
                                    946 ; Home
                                    947 ;--------------------------------------------------------
                                    948 	.area HOME    (CODE)
                                    949 	.area HOME    (CODE)
      000003                        950 __sdcc_program_startup:
      000003 02r00r5C         [24]  951 	ljmp	_main
                                    952 ;	return from main will return to caller
                                    953 ;--------------------------------------------------------
                                    954 ; code
                                    955 ;--------------------------------------------------------
                                    956 	.area CSEG    (CODE)
                                    957 ;------------------------------------------------------------
                                    958 ;Allocation info for local variables in function 'SYSCLK_Init'
                                    959 ;------------------------------------------------------------
                                    960 ;i                         Allocated to registers 
                                    961 ;------------------------------------------------------------
                           000000   962 	G$SYSCLK_Init$0$0 ==.
                           000000   963 	C$c8051_SDCC.h$42$0$0 ==.
                                    964 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:42: void SYSCLK_Init(void)
                                    965 ;	-----------------------------------------
                                    966 ;	 function SYSCLK_Init
                                    967 ;	-----------------------------------------
      000000                        968 _SYSCLK_Init:
                           000007   969 	ar7 = 0x07
                           000006   970 	ar6 = 0x06
                           000005   971 	ar5 = 0x05
                           000004   972 	ar4 = 0x04
                           000003   973 	ar3 = 0x03
                           000002   974 	ar2 = 0x02
                           000001   975 	ar1 = 0x01
                           000000   976 	ar0 = 0x00
                           000000   977 	C$c8051_SDCC.h$46$1$2 ==.
                                    978 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:46: OSCXCN = 0x67;                      // start external oscillator with
      000000 75 B1 67         [24]  979 	mov	_OSCXCN,#0x67
                           000003   980 	C$c8051_SDCC.h$49$1$2 ==.
                                    981 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:49: for (i=0; i < 256; i++);            // wait for oscillator to start
      000003 7E 00            [12]  982 	mov	r6,#0x00
      000005 7F 01            [12]  983 	mov	r7,#0x01
      000007                        984 00107$:
      000007 1E               [12]  985 	dec	r6
      000008 BE FF 01         [24]  986 	cjne	r6,#0xFF,00121$
      00000B 1F               [12]  987 	dec	r7
      00000C                        988 00121$:
      00000C EE               [12]  989 	mov	a,r6
      00000D 4F               [12]  990 	orl	a,r7
      00000E 70 F7            [24]  991 	jnz	00107$
                           000010   992 	C$c8051_SDCC.h$51$1$2 ==.
                                    993 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:51: while (!(OSCXCN & 0x80));           // Wait for crystal osc. to settle
      000010                        994 00102$:
      000010 E5 B1            [12]  995 	mov	a,_OSCXCN
      000012 30 E7 FB         [24]  996 	jnb	acc.7,00102$
                           000015   997 	C$c8051_SDCC.h$53$1$2 ==.
                                    998 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:53: OSCICN = 0x88;                      // select external oscillator as SYSCLK
      000015 75 B2 88         [24]  999 	mov	_OSCICN,#0x88
                           000018  1000 	C$c8051_SDCC.h$56$1$2 ==.
                           000018  1001 	XG$SYSCLK_Init$0$0 ==.
      000018 22               [24] 1002 	ret
                                   1003 ;------------------------------------------------------------
                                   1004 ;Allocation info for local variables in function 'UART0_Init'
                                   1005 ;------------------------------------------------------------
                           000019  1006 	G$UART0_Init$0$0 ==.
                           000019  1007 	C$c8051_SDCC.h$64$1$2 ==.
                                   1008 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:64: void UART0_Init(void)
                                   1009 ;	-----------------------------------------
                                   1010 ;	 function UART0_Init
                                   1011 ;	-----------------------------------------
      000019                       1012 _UART0_Init:
                           000019  1013 	C$c8051_SDCC.h$66$1$4 ==.
                                   1014 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:66: SCON0  = 0x50;                      // SCON0: mode 1, 8-bit UART, enable RX
      000019 75 98 50         [24] 1015 	mov	_SCON0,#0x50
                           00001C  1016 	C$c8051_SDCC.h$67$1$4 ==.
                                   1017 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:67: TMOD   = 0x20;                      // TMOD: timer 1, mode 2, 8-bit reload
      00001C 75 89 20         [24] 1018 	mov	_TMOD,#0x20
                           00001F  1019 	C$c8051_SDCC.h$68$1$4 ==.
                                   1020 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:68: TH1    = -(SYSCLK/BAUDRATE/16);     // set Timer1 reload value for baudrate
      00001F 75 8D DC         [24] 1021 	mov	_TH1,#0xDC
                           000022  1022 	C$c8051_SDCC.h$69$1$4 ==.
                                   1023 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:69: TR1    = 1;                         // start Timer1
      000022 D2 8E            [12] 1024 	setb	_TR1
                           000024  1025 	C$c8051_SDCC.h$70$1$4 ==.
                                   1026 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:70: CKCON |= 0x10;                      // Timer1 uses SYSCLK as time base
      000024 43 8E 10         [24] 1027 	orl	_CKCON,#0x10
                           000027  1028 	C$c8051_SDCC.h$71$1$4 ==.
                                   1029 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:71: PCON  |= 0x80;                      // SMOD00 = 1 (disable baud rate 
      000027 43 87 80         [24] 1030 	orl	_PCON,#0x80
                           00002A  1031 	C$c8051_SDCC.h$73$1$4 ==.
                                   1032 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:73: TI0    = 1;                         // Indicate TX0 ready
      00002A D2 99            [12] 1033 	setb	_TI0
                           00002C  1034 	C$c8051_SDCC.h$74$1$4 ==.
                                   1035 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:74: P0MDOUT |= 0x01;                    // Set TX0 to push/pull
      00002C 43 A4 01         [24] 1036 	orl	_P0MDOUT,#0x01
                           00002F  1037 	C$c8051_SDCC.h$75$1$4 ==.
                           00002F  1038 	XG$UART0_Init$0$0 ==.
      00002F 22               [24] 1039 	ret
                                   1040 ;------------------------------------------------------------
                                   1041 ;Allocation info for local variables in function 'Sys_Init'
                                   1042 ;------------------------------------------------------------
                           000030  1043 	G$Sys_Init$0$0 ==.
                           000030  1044 	C$c8051_SDCC.h$83$1$4 ==.
                                   1045 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:83: void Sys_Init(void)
                                   1046 ;	-----------------------------------------
                                   1047 ;	 function Sys_Init
                                   1048 ;	-----------------------------------------
      000030                       1049 _Sys_Init:
                           000030  1050 	C$c8051_SDCC.h$85$1$6 ==.
                                   1051 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:85: WDTCN = 0xde;			// disable watchdog timer
      000030 75 FF DE         [24] 1052 	mov	_WDTCN,#0xDE
                           000033  1053 	C$c8051_SDCC.h$86$1$6 ==.
                                   1054 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:86: WDTCN = 0xad;
      000033 75 FF AD         [24] 1055 	mov	_WDTCN,#0xAD
                           000036  1056 	C$c8051_SDCC.h$88$1$6 ==.
                                   1057 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:88: SYSCLK_Init();			// initialize oscillator
      000036 12r00r00         [24] 1058 	lcall	_SYSCLK_Init
                           000039  1059 	C$c8051_SDCC.h$89$1$6 ==.
                                   1060 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:89: UART0_Init();			// initialize UART0
      000039 12r00r19         [24] 1061 	lcall	_UART0_Init
                           00003C  1062 	C$c8051_SDCC.h$91$1$6 ==.
                                   1063 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:91: XBR0 |= 0x04;
      00003C 43 E1 04         [24] 1064 	orl	_XBR0,#0x04
                           00003F  1065 	C$c8051_SDCC.h$92$1$6 ==.
                                   1066 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:92: XBR2 |= 0x40;                    	// Enable crossbar and weak pull-ups
      00003F 43 E3 40         [24] 1067 	orl	_XBR2,#0x40
                           000042  1068 	C$c8051_SDCC.h$93$1$6 ==.
                           000042  1069 	XG$Sys_Init$0$0 ==.
      000042 22               [24] 1070 	ret
                                   1071 ;------------------------------------------------------------
                                   1072 ;Allocation info for local variables in function 'putchar'
                                   1073 ;------------------------------------------------------------
                                   1074 ;c                         Allocated to registers r7 
                                   1075 ;------------------------------------------------------------
                           000043  1076 	G$putchar$0$0 ==.
                           000043  1077 	C$c8051_SDCC.h$98$1$6 ==.
                                   1078 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:98: void putchar(char c)
                                   1079 ;	-----------------------------------------
                                   1080 ;	 function putchar
                                   1081 ;	-----------------------------------------
      000043                       1082 _putchar:
      000043 AF 82            [24] 1083 	mov	r7,dpl
                           000045  1084 	C$c8051_SDCC.h$100$1$8 ==.
                                   1085 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:100: while (!TI0); 
      000045                       1086 00101$:
                           000045  1087 	C$c8051_SDCC.h$101$1$8 ==.
                                   1088 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:101: TI0 = 0;
      000045 10 99 02         [24] 1089 	jbc	_TI0,00112$
      000048 80 FB            [24] 1090 	sjmp	00101$
      00004A                       1091 00112$:
                           00004A  1092 	C$c8051_SDCC.h$102$1$8 ==.
                                   1093 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:102: SBUF0 = c;
      00004A 8F 99            [24] 1094 	mov	_SBUF0,r7
                           00004C  1095 	C$c8051_SDCC.h$103$1$8 ==.
                           00004C  1096 	XG$putchar$0$0 ==.
      00004C 22               [24] 1097 	ret
                                   1098 ;------------------------------------------------------------
                                   1099 ;Allocation info for local variables in function 'getchar'
                                   1100 ;------------------------------------------------------------
                                   1101 ;c                         Allocated to registers 
                                   1102 ;------------------------------------------------------------
                           00004D  1103 	G$getchar$0$0 ==.
                           00004D  1104 	C$c8051_SDCC.h$108$1$8 ==.
                                   1105 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:108: char getchar(void)
                                   1106 ;	-----------------------------------------
                                   1107 ;	 function getchar
                                   1108 ;	-----------------------------------------
      00004D                       1109 _getchar:
                           00004D  1110 	C$c8051_SDCC.h$111$1$10 ==.
                                   1111 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:111: while (!RI0);
      00004D                       1112 00101$:
                           00004D  1113 	C$c8051_SDCC.h$112$1$10 ==.
                                   1114 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:112: RI0 = 0;
      00004D 10 98 02         [24] 1115 	jbc	_RI0,00112$
      000050 80 FB            [24] 1116 	sjmp	00101$
      000052                       1117 00112$:
                           000052  1118 	C$c8051_SDCC.h$113$1$10 ==.
                                   1119 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:113: c = SBUF0;
      000052 85 99 82         [24] 1120 	mov	dpl,_SBUF0
                           000055  1121 	C$c8051_SDCC.h$114$1$10 ==.
                                   1122 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:114: putchar(c);                          // echo to terminal
      000055 12r00r43         [24] 1123 	lcall	_putchar
                           000058  1124 	C$c8051_SDCC.h$115$1$10 ==.
                                   1125 ;	C:/Program Files (x86)/SDCC/bin/../include/mcs51/c8051_SDCC.h:115: return SBUF0;
      000058 85 99 82         [24] 1126 	mov	dpl,_SBUF0
                           00005B  1127 	C$c8051_SDCC.h$116$1$10 ==.
                           00005B  1128 	XG$getchar$0$0 ==.
      00005B 22               [24] 1129 	ret
                                   1130 ;------------------------------------------------------------
                                   1131 ;Allocation info for local variables in function 'main'
                                   1132 ;------------------------------------------------------------
                                   1133 ;temp0_lo_to_hi            Allocated to registers 
                                   1134 ;------------------------------------------------------------
                           00005C  1135 	G$main$0$0 ==.
                           00005C  1136 	C$test.c$10$1$10 ==.
                                   1137 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:10: void main(void)
                                   1138 ;	-----------------------------------------
                                   1139 ;	 function main
                                   1140 ;	-----------------------------------------
      00005C                       1141 _main:
                           00005C  1142 	C$test.c$14$1$43 ==.
                                   1143 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:14: Sys_Init();
      00005C 12r00r30         [24] 1144 	lcall	_Sys_Init
                           00005F  1145 	C$test.c$15$1$43 ==.
                                   1146 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:15: Port_Init();
      00005F 12r00r77         [24] 1147 	lcall	_Port_Init
                           000062  1148 	C$test.c$16$1$43 ==.
                                   1149 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:16: PCA_Init();
      000062 12r00r7E         [24] 1150 	lcall	_PCA_Init
                           000065  1151 	C$test.c$18$1$43 ==.
                                   1152 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:18: while(1)
      000065                       1153 00102$:
                           000065  1154 	C$test.c$20$2$44 ==.
                                   1155 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:20: temp0_lo_to_hi=0xFFFF - CEX0_PW;
      000065 AE*00            [24] 1156 	mov	r6,_CEX0_PW
      000067 AF*01            [24] 1157 	mov	r7,(_CEX0_PW + 1)
      000069 74 FF            [12] 1158 	mov	a,#0xFF
      00006B C3               [12] 1159 	clr	c
      00006C 9E               [12] 1160 	subb	a,r6
      00006D F5 EA            [12] 1161 	mov	((_PCA0CP0 >> 0) & 0xFF),a
      00006F 74 FF            [12] 1162 	mov	a,#0xFF
      000071 9F               [12] 1163 	subb	a,r7
      000072 F5 FA            [12] 1164 	mov	((_PCA0CP0 >> 8) & 0xFF),a
                           000074  1165 	C$test.c$21$1$43 ==.
                                   1166 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:21: PCA0CP0 = temp0_lo_to_hi;
      000074 80 EF            [24] 1167 	sjmp	00102$
                           000076  1168 	C$test.c$23$1$43 ==.
                           000076  1169 	XG$main$0$0 ==.
      000076 22               [24] 1170 	ret
                                   1171 ;------------------------------------------------------------
                                   1172 ;Allocation info for local variables in function 'Port_Init'
                                   1173 ;------------------------------------------------------------
                           000077  1174 	G$Port_Init$0$0 ==.
                           000077  1175 	C$test.c$25$1$43 ==.
                                   1176 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:25: void Port_Init(void)
                                   1177 ;	-----------------------------------------
                                   1178 ;	 function Port_Init
                                   1179 ;	-----------------------------------------
      000077                       1180 _Port_Init:
                           000077  1181 	C$test.c$27$1$46 ==.
                                   1182 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:27: P0MDOUT |= 0x04;
      000077 43 A4 04         [24] 1183 	orl	_P0MDOUT,#0x04
                           00007A  1184 	C$test.c$28$1$46 ==.
                                   1185 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:28: XBR0 = 0x08;
      00007A 75 E1 08         [24] 1186 	mov	_XBR0,#0x08
                           00007D  1187 	C$test.c$29$1$46 ==.
                           00007D  1188 	XG$Port_Init$0$0 ==.
      00007D 22               [24] 1189 	ret
                                   1190 ;------------------------------------------------------------
                                   1191 ;Allocation info for local variables in function 'PCA_Init'
                                   1192 ;------------------------------------------------------------
                           00007E  1193 	G$PCA_Init$0$0 ==.
                           00007E  1194 	C$test.c$31$1$46 ==.
                                   1195 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:31: void PCA_Init(void)
                                   1196 ;	-----------------------------------------
                                   1197 ;	 function PCA_Init
                                   1198 ;	-----------------------------------------
      00007E                       1199 _PCA_Init:
                           00007E  1200 	C$test.c$33$1$48 ==.
                                   1201 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:33: PCA0CPM0 = 0xC2;
      00007E 75 DA C2         [24] 1202 	mov	_PCA0CPM0,#0xC2
                           000081  1203 	C$test.c$34$1$48 ==.
                                   1204 ;	C:\Users\Michael\Documents\GitHub\LITEC\lab3-1\test.c:34: PCA0CN = 0x40;
      000081 75 D8 40         [24] 1205 	mov	_PCA0CN,#0x40
                           000084  1206 	C$test.c$35$1$48 ==.
                           000084  1207 	XG$PCA_Init$0$0 ==.
      000084 22               [24] 1208 	ret
                                   1209 	.area CSEG    (CODE)
                                   1210 	.area CONST   (CODE)
                                   1211 	.area XINIT   (CODE)
                                   1212 	.area CABS    (ABS,CODE)
